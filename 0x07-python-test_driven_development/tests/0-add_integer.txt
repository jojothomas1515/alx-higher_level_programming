==================================
Tests for the add_integer function
==================================

Setup

::

    >>> add_integer = __import__("0-add_integer").add_integer


Test if the integer addition is correct

::
    >>> add_integer(22, 33)
    55

    >>> add_integer(100, -2)
    98

    >>> add_integer(2)
    100

Test to check if the floats get cast int properly

::

    >>> add_integer(22.5, 33)
    55

Test to check if it throws TypeError

::

    >>> add_integer("22.5", 33)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

Test for float nan

::

    >>> add_integer(4, float("nan"))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer


Test for float overflow

::

    >>> import sys
    >>> add_integer(1, + sys.float_info.max)
    179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858369
    